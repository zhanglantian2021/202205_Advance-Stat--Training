summary(bark2)
model_Flog <-brm(Dlog~Function+(1|phylo2)+(1|Species), #
                  cov_ranef = list(phylo2 = phylo_cor),#
                  data = bark2, family = gaussian(), sample_prior = TRUE,#
                  iter = 10000,warmup = 5000, chains = 4, cores = 4,#
                  thin = 10, save_all_pars = TRUE,seed=T,#
                  control=list(adapt_delta=0.99))
summary(model_Flog)
plot(model_Flog, N = 6, ask = FALSE)
plot(conditional_effects(model_Flog), points = TRUE)
mcmc_plot(model_Flog, pars = c("^b_", "^sd_"))
?mcmc_plot
hyp <- "sd_phylo2__Intercept^2 / (sd_phylo2__Intercept^2 + sd_Species__Intercept^2 + sigma^2) = 0"
(hyp <- hypothesis(model_Flog, hyp, class = NULL))
bayes_R2(model_Flog)
library(sjPlot)#
tab_model(model_Flog, show.intercept = T, show.r2 = TRUE, #
          transform = NULL,show.re.var=T)
pp_check(model_Flog, nsamples =100)
mcmc_plot(model_Flog, type = "nuts_acceptance")
saveRDS(model_Flog, "bark/Dlog_Int_Phyl_Spec.rds")
pp_check(model_Flog, nsamples =100)
model_Flog <- readRDS("bark/Dlog_Int_Phyl_Spec.rds")
pp_check(model_Flog, type = "intervals_grouped", group = "Function")
mcmc_plot(model_Flog, type = "neff")
pp_check(model_Flog, type = "intervals_grouped", group = "Function")
stan_ac(model_Flog$fit)
library(rstan)
stan_ac(model_Flog$fit)
icc(model_Flog) %>% print(prob = .95, digits = 3)
library(performance)#
library(dplyr)#
icc(model_Flog) %>% print(prob = .95, digits = 3)
plot(hyp)
(hyp <- hypothesis(model_Flog, hyp, class = NULL))
hyp <- "sd_phylo2__Intercept^2 / (sd_phylo2__Intercept^2 + sd_Species__Intercept^2 + sigma^2) = 0"#
(hyp <- hypothesis(model_Flog, hyp, class = NULL))
hyp <- "(sd_phylo2__Intercept^2 + sd_Species__Intercept^2 )/ (sd_phylo2__Intercept^2 + sd_Species__Intercept^2 + sigma^2) = 0"
(hyp <- hypothesis(model_Flog, hyp, class = NULL))
icc(model_Flog,ppd=T,re.form = ~(1| cyl),robust=T)
icc(model_Flog,ppd=T,re.form = ~(1| phylo2),robust=T)
(hyp <- hypothesis(model_Flog, hyp, class = NULL))
hyp <- "(sd_phylo2__Intercept^2)/ (sd_phylo2__Intercept^2 + sd_Species__Intercept^2 + sigma^2) = 0"
(hyp <- hypothesis(model_Flog, hyp, class = NULL))
model_Flog2 <- saveRDS("bark/Dlog_Int_Spec.rds")
model_Flog2 <- readRDS("bark/Dlog_Int_Spec.rds")
summary(model_Flog2)
loo(model_Flog,model_Flog2,reloo=T)
loo(model_Flog,model_Flog2,reloo=F)
q()
library(brms)#
library(ggplot2)#
library(ape)#
library(caper)#
##################################################
#### load trait data ######
##################################################
getwd()#
# database with the corrected data#
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)#
summary(bark)#
#
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Month <- as.factor(bark$Month)#
bark$Function <- as.factor(bark$Function)#
#
summary(bark)#
dim(bark)#
#
length(unique(bark$Species)) #53 species#
##################################################
#### load phylogeny data ######
##################################################
phylo <- read.tree("bark/scenario.2_run.1.tre")#
plot(phylo)#
summary(phylo)  #31 species#
#
# there are no polytomies#
is.binary.tree(phylo) #TRUE#
#
# check tree is ultrametric#
is.ultrametric(phylo) # TRUE#
##################################################
### reduce data types to set of common species ###
##################################################
#
# B. reduce both data types to the minimum set of common species
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)
#make the covariance matrix from the phylogeny#
phylo_cor <- ape::vcv.phylo(phylo2)#
summary(phylo_cor)#
#make an additional factor to reference the species in the phylogeny#
bark2$phylo2 <- bark2$Species#
#
summary(bark2)
par(mfrow=c(1,3))#
plot(density((bark2$D)))#
plot(density(sqrt(bark2$D)))#
plot(density(log(bark2$D)))#
bark2 $Dlog=log(bark2 $D)#
#bark2 $int=interaction(bark2 $Function,bark2$Month)#
summary(bark2)
bark <- read.csv("bark/debark.csv", header = TRUE, sep = ",", row.names = NULL)
bark <- read.csv("bark/debark.csv", header = TRUE, sep = ";", row.names = NULL)
bark <- read.csv("bark/debarking.csv", header = TRUE, sep = ";", row.names = NULL)
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Month <- as.factor(bark$Month)#
bark$Function <- as.factor(bark$Function)#
#
summary(bark)#
dim(bark)#
#
length(unique(bark$Species)) #53 species
debark <- read.csv("bark/debarking.csv", header = TRUE, sep = ";", row.names = NULL)
summary(debark)
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Strategy <- as.factor(bark$Strategy)#
bark$Genus <- as.factor(bark$Genus)
debark$Species <- as.factor(debark $Species)#
debark $Family <- as.factor(debark $Family)#
debark $Strategy <- as.factor(debark $Strategy)#
debark $Genus <- as.factor(debark $Genus)
summary(debark)
debark2 <- debark[,c("Species","Family","Prop.S","Strategy")]
debark2
write.csv(debark2,"bark/debarking2.csv")
debark <- read.csv("bark/debarking2.csv", header = TRUE, sep = ";", row.names = NULL)
summary(debark)
debark <- read.csv("bark/debarking.csv", header = TRUE, sep = ";", row.names = NULL)#
debark$Species <- as.factor(debark $Species)#
debark $Family <- as.factor(debark $Family)#
debark $Strategy <- as.factor(debark $Strategy)#
debark $Genus <- as.factor(debark $Genus)#
#
debark2 <- debark[,c("Species","Family","Prop.S","Strategy")]
debark2
write.csv(debark2,"bark/debarking2.csv",row.names=F)
debark <- read.csv("bark/debarking2.csv", header = TRUE, sep = ";", row.names = NULL)
summary(debark)
write.csv(debark2,"bark/debarking2.csv",sep=",",row.names=F)
write.csv(debark2,"debarking2.csv",row.names=F)
debark <- read.csv("debarking2.csv", header = TRUE, sep = ";", row.names = NULL)
summary(debark)
debark <- read.csv("bark/debarking2.csv", header = TRUE, sep = ";", row.names = NULL)#
summary(debark)#
#
debark$Species <- as.factor(debark $Species)#
debark $Family <- as.factor(debark $Family)#
debark $Strategy <- as.factor(debark $Strategy)#
debark $Genus <- as.factor(debark $Genus)#
#
debark2 <- debark[,c("Species","Family","Prop.S","Strategy")]
debark <- read.csv("bark/debarking.csv", header = TRUE, sep = ";", row.names = NULL)#
summary(debark)#
#
debark$Species <- as.factor(debark $Species)#
debark $Family <- as.factor(debark $Family)#
debark $Strategy <- as.factor(debark $Strategy)#
debark $Genus <- as.factor(debark $Genus)#
#
debark2 <- debark[,c("Species","Family","Prop.S","Strategy")]
summary(debark2)
?write.csv
write.csv(debark2,file="bark/debarking2.csv",row.names=F)
debark <- read.csv("bark/debarking2.csv", header = TRUE, sep = ";", row.names = NULL)
summary(debark)
debark <- read.csv("bark/debarking2.csv", header = TRUE, sep = ",", row.names = NULL)
summary(debark)
debark$Species <- as.factor(debark $Species)#
debark $Family <- as.factor(debark $Family)#
debark $Strategy <- as.factor(debark $Strategy)
summary(debark)
debark <- read.csv("bark/debarking.csv", header = TRUE, sep = ",", row.names = NULL)
summary(debark)
debark$Species <- as.factor(debark $Species)#
debark $Family <- as.factor(debark $Family)#
debark $Strategy <- as.factor(debark $Strategy)#
#
summary(debark)
?brm
debark$Prop.S.01=(debark$Prop.S)/100
summary(debark)
n1<-unique(phylo$tip.label)#
str(n1)#
debark2 <- debark[debark$Species %in% n1,]#
dim(debark)#
dim(debark2) #
length(unique(debark2$Species)) #only 27, less than the tree
n1<-unique(phylo$tip.label)#
str(n1)#
debark2 <- debark[debark$Species %in% n1,]#
dim(debark)#
dim(debark2)
length(unique(debark2$Species)) #only 27, less than the tree
n2<-unique(debark2$Species)
phylo3<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])
summary(phylo3)
phylo_cor3 <- ape::vcv.phylo(phylo3)
summary(phylo_cor3)
bark2$phylo3 <- debark2$Species
debark2$phylo3 <- debark2$Species
summary(debark2)
model_Flog <-brm(Prop.S.01~Strategy+(1|phylo3), #
                 cov_ranef = list(Phylo = phylo_cor),#
                 data = debark, family = Beta(), sample_prior = TRUE,#
                 iter = 20000,warmup = 10000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
model_Flog <-brm(Prop.S.01~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor),#
                 data = debark2, family = Beta(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
model_Flog <-brm(Prop.S.01~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = Beta(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
summary(model_Flog)
saveRDS(model_Flog, "bark/debark_squirrel_beta.rds")
m_debark_beta <- readRDS("bark/debark_squirrel_beta.rds")
summary(m_debark_beta)
m_debark_binom <-brm(Prop.S.01~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = Binomial(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
m_debark_binom <-brm(Prop.S.01~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = binomial(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
debark2$Prop.S
debark2$Prop.S.int <- as.integer(debark2$Prop.S)
debark2$Prop.S.int
debark2$Prop.S.int <- as.integer(debark2$Prop.S*10)
debark2$Prop.S.int
m_debark_beta <-brm(Prop.S.int~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = Beta(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
debark$Prop.S.01=(debark$Prop.int)/1000
summary(deabark2)
summary(debark2)
debark$Prop.S.01=as.numeric(debark$Prop.int)/1000
m_debark_beta <-brm(Prop.S.01~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = Beta(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
dim(debark)
dim(debark2)
summary(m_debark_beta)
saveRDS(m_debark_beta, "bark/debark_squirrel_beta.rds")
m_debark_binom <-brm(Prop.S.int~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = binomial(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
summary(m_debark_binom)
saveRDS(m_debark_binom, "bark/debark_squirrel_binom.rds")
bayes_R2(m_debark_beta)
bayes_R2(m_debark_binom)
debark2$Prop.S.int
m_debark_binom <-brm(Prop.S.int|trials(1000)~Strategy+(1|phylo3), #
                 cov_ranef = list(phylo3 = phylo_cor3),#
                 data = debark2, family = binomial(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
summary(m_debark_binom)
saveRDS(m_debark_binom, "bark/debark_squirrel_binom.rds")
library(MLmetrics)#
library(MuMIn)#
library(ggplot2)
summary(debark2)
bayes_R2(m_debark_beta)
bayes_R2(m_debark_binom)
pp_check(model_Flog, type = "intervals_grouped", group = "Function")
plot(conditional_effects(m_debark_beta), points = TRUE)
pp_check(m_debark_beta, nsamples =100)
pp_check(m_debark_beta, type = "intervals_grouped", group = "Function")
pp_check(m_debark_beta, type = "intervals_grouped", group = "Strategy")
quartz()
pp_check(m_debark_binom, type = "intervals_grouped", group = "Strategy")
bayes_R2(m_debark_binom)
pp_check(m_debark_binom, type = "scatter_avg_grouped", group = "Strategy") + #
  geom_abline(intercept = 0, slope = 1 , color = "red", lty = 2)
pp_check(m_debark_beta, type = "scatter_avg_grouped", group = "Strategy") + #
  geom_abline(intercept = 0, slope = 1 , color = "red", lty = 2)
summary(m_debark_binom)
summary(m_debark_beta)
Yrep<- as.data.frame(fitted (m_debark_beta)
)
Yrep
Yrep.beta<- as.data.frame(fitted (m_debark_beta))
Yrep.binom<- as.data.frame(fitted (m_debark_binom))
plot(Yrep.beta$estimate,Yrep.binom$estimate)
Yrep.binom
Yrep.beta
plot(Yrep.beta$Estimate,Yrep.binom$Estimate)
summary(debark2)
comp <- cbind(debark2$Prop.S.01)
comp
obs <- debark2$Prop.S.01
obs
y.beta <- Yrep.beta$Estimate
y.binom <- Yrep.binom$Estimate
y.binom <- Yrep.binom$Estimate/1000
comb <- data.frame(obs,y.beta,y.binom)
comb
ggplot(data=comb, aes(x=obs, y=y.beta)) + geom_point(col="red")+#
  geom_point(data=comb,aes(x=obs, y=y.binom),#
              stat='identity')
par(mfrow=c(1,2))  #
plot(y.beta~obs,data=comb,col="red")#
abline(a=0,b=1,col="black")#
plot(y.binom~obs,data=comb,col="blue")#
abline(a=0,b=1,col="black")
RMSPE(y_pred=y.beta,y_true=obs)#
RMSPE(y_pred=y.binom,y_true=obs)
debark2$Prop.S.int
m_debark_binom <- readRDS("bark/debark_squirrel_binom.rds")
summary(m_debark_binom)
bayes_R2(m_debark_beta)
bayes_R2(m_debark_binom)
pp_check(m_debark_beta, type = "intervals_grouped", group = "Strategy")
quartz()
pp_check(m_debark_binom, type = "intervals_grouped", group = "Strategy")
m_debark_binom2 <-brm(Prop.S.int|trials(1000)~Strategy, #
                 data = debark2, family = binomial(), sample_prior = TRUE,#
                 iter = 2000,warmup = 1000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE, seed = T,#
                 control=list(adapt_delta=0.95, max_treedepth=15))
summary(m_debark_binom2)
quartz()#
pp_check(m_debark_binom2, type = "intervals_grouped", group = "Strategy")
q()
library(brms)#
library(ggplot2)#
library(ape)#
library(caper)
setwd("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model")
bark <- read.csv("/bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)
summary(bark)
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Month <- as.factor(bark$Month)#
bark$Function <- as.factor(bark$Function)#
#
summary(bark) #note that there are multiple individuals per species#
dim(bark)#
#
length(unique(bark$Species)) #53 species
phylo <- read.tree("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model/bark/scenario.2_run.1.tre")
plot(phylo)
is.binary.tree(phylo) #TRUE
is.ultrametric(phylo) # TRUE
combine<-comparative.data(phylo,bark,Species,vcv=TRUE,na.omit=F)
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)
phylo_cor <- ape::vcv.phylo(phylo2)
summary(phylo_cor)
bark2$phylo2 <- bark2$Species
summary(bark2)
bark2 $Dlog=log(bark2 $D)
model_Flog <-brm(Dlog~Function+(1|phylo2)+(1|Species), #
                  cov_ranef = list(phylo2 = phylo_cor),#
                  data = bark2, family = gaussian(link="identity"), sample_prior = TRUE,#
                  iter = 10000,warmup = 5000, chains = 4, cores = 4,#
                  thin = 10, save_all_pars = TRUE,seed=T,#
                  control=list(adapt_delta=0.99))
devtools::install_version('rstan', version = '2.19.3', repos = "http://cran.us.r-project.org")
q()
library(brms)
library(ggplot2)#
library(ape)#
library(caper)
setwd("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model")
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)#
summary(bark)#
#
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Month <- as.factor(bark$Month)#
bark$Function <- as.factor(bark$Function)#
#
summary(bark) #note that there are multiple individuals per species#
dim(bark)#
#
length(unique(bark$Species)) #53 species
phylo <- read.tree("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model/bark/scenario.2_run.1.tre")#
plot(phylo)#
summary(phylo)  #31 species#
#
# there are no polytomies#
is.binary.tree(phylo) #TRUE#
#
# check tree is ultrametric#
is.ultrametric(phylo) # TRUE
combine<-comparative.data(phylo,bark,Species,vcv=TRUE,na.omit=F)#
#doesnt work because the function cannot handle repeats#
#
#different route#
#first reduce data to list of common taxa with tree#
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)
phylo_cor <- ape::vcv.phylo(phylo2)#
summary(phylo_cor)#
#
#make an additional factor to reference the species in the phylogeny#
bark2$phylo2 <- bark2$Species#
#
summary(bark2)
par(mfrow=c(1,3))#
plot(density((bark2$D)))#
plot(density(sqrt(bark2$D)))#
plot(density(log(bark2$D)))#
#
bark2 $Dlog=log(bark2 $D)
summary(bark2)
model_Flog <-brm(Dlog~Function+(1|phylo2)+(1|Species), #
                 cov_ranef = list(phylo2 = phylo_cor),#
                 data = bark2, family = gaussian(link="identity"), sample_prior = TRUE,#
                 iter = 10000,warmup = 5000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE,seed=T,#
                 control=list(adapt_delta=0.99))
chooseCRANmirror()
install.packages("brms")
library(brms)
library(ggplot2)
library(ape)
library(caper)
setwd("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model")
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)
bark$Species <- as.factor(bark$Species)
bark$Family <- as.factor(bark$Family)
bark$Month <- as.factor(bark$Month)
bark$Function <- as.factor(bark$Function)
length(unique(bark$Species)) #53 species
phylo <- read.tree("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model/bark/scenario.2_run.1.tre")
plot(phylo)
is.binary.tree(phylo) #TRUE
is.ultrametric(phylo) # TRUE
combine<-comparative.data(phylo,bark,Species,vcv=TRUE,na.omit=F)#
#doesnt work because the function cannot handle repeats#
#
#different route#
#first reduce data to list of common taxa with tree#
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)
bark2
length(unique(bark2$Species)) #only 27, less than the tree
n2<-unique(bark2$Species)
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])
summary(phylo2)
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)
phylo_cor <- ape::vcv.phylo(phylo2)
summary(phylo_cor)
bark2$phylo2 <- bark2$Species
summary(bark2)
par(mfrow=c(1,3))#
plot(density((bark2$D)))#
plot(density(sqrt(bark2$D)))#
plot(density(log(bark2$D)))#
#
bark2 $Dlog=log(bark2 $D)
model_Flog <-brm(Dlog~Function+(1|phylo2)+(1|Species), #
                 cov_ranef = list(phylo2 = phylo_cor),#
                 data = bark2, family = gaussian(link="identity"), sample_prior = TRUE,#
                 iter = 10000,warmup = 5000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE,seed=T,#
                 control=list(adapt_delta=0.99))
q()
library(brms)#
library(ggplot2)#
library(ape)#
library(caper)#
#
#devtools::install_version('rstan', version = '2.19.3', repos = "http://cran.us.r-project.org")#
#
##################################################
#### load trait data ######
##################################################
setwd("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model")#
#
# database with the corrected data#
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)#
summary(bark)
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Month <- as.factor(bark$Month)#
bark$Function <- as.factor(bark$Function)#
#
summary(bark) #note that there are multiple individuals per species#
dim(bark)#
#
length(unique(bark$Species)) #53 species#
#
##################################################
#### load phylogeny data ######
##################################################
phylo <- read.tree("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model/bark/scenario.2_run.1.tre")#
plot(phylo)#
summary(phylo)  #31 species#
#
# there are no polytomies#
is.binary.tree(phylo) #TRUE#
#
# check tree is ultrametric#
is.ultrametric(phylo) # TRUE#
##################################################
### reduce data types to set of common species ###
##################################################
#
# B. reduce both data types to the minimum set of common species#
#
#try comparative data#
combine<-comparative.data(phylo,bark,Species,vcv=TRUE,na.omit=F)#
#doesnt work because the function cannot handle repeats#
#
#different route#
#first reduce data to list of common taxa with tree#
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)#
#
##################################################
### make covariance matrix ###
##################################################
#
#make the covariance matrix from the phylogeny#
phylo_cor <- ape::vcv.phylo(phylo2)#
summary(phylo_cor)#
#
#make an additional factor to reference the species in the phylogeny#
bark2$phylo2 <- bark2$Species#
#
summary(bark2)#
#
##################################################
#### response data distribution ######
##################################################
#we will concentrate on D#
#
#Distribution#
par(mfrow=c(1,3))#
plot(density((bark2$D)))#
plot(density(sqrt(bark2$D)))#
plot(density(log(bark2$D)))#
#
bark2 $Dlog=log(bark2 $D)#
#
#bark2 $int=interaction(bark2 $Function,bark2$Month)#
#
summary(bark2)
model_Flog <-brm(Dlog~Function+(1|phylo2)+(1|Species), #
                 cov_ranef = list(phylo2 = phylo_cor),#
                 data = bark2, family = gaussian(link="identity"), sample_prior = TRUE,#
                 iter = 10000,warmup = 5000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE,seed=T,#
                 control=list(adapt_delta=0.99))
q()
library(brms)#
library(ggplot2)#
library(ape)#
library(caper)#
#
#devtools::install_version('rstan', version = '2.19.3', repos = "http://cran.us.r-project.org")#
#
##################################################
#### load trait data ######
##################################################
setwd("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model")#
#
# database with the corrected data#
bark <- read.csv("bark/bark_nutrition.csv", header = TRUE, sep = ",", row.names = NULL)#
summary(bark)#
#
bark$Species <- as.factor(bark$Species)#
bark$Family <- as.factor(bark$Family)#
bark$Month <- as.factor(bark$Month)#
bark$Function <- as.factor(bark$Function)#
#
summary(bark) #note that there are multiple individuals per species#
dim(bark)#
#
length(unique(bark$Species)) #53 species
phylo <- read.tree("/Users/kyletomlinson/Dropbox/Teaching/XTBG advanced stats 2021/Lectures/Lesson 10 The animal model/bark/scenario.2_run.1.tre")#
plot(phylo)#
summary(phylo)  #31 species#
#
# there are no polytomies#
is.binary.tree(phylo) #TRUE#
#
# check tree is ultrametric#
is.ultrametric(phylo) # TRUE#
##################################################
### reduce data types to set of common species ###
##################################################
#
# B. reduce both data types to the minimum set of common species#
#
#try comparative data#
combine<-comparative.data(phylo,bark,Species,vcv=TRUE,na.omit=F)#
#doesnt work because the function cannot handle repeats#
#
#different route#
#first reduce data to list of common taxa with tree#
n1<-unique(phylo$tip.label)#
str(n1)#
bark2 <- bark[bark$Species %in% n1,]#
dim(bark)#
dim(bark2) #
length(unique(bark2$Species)) #only 27, less than the tree#
#
#so, second reduce tree to match common taxa with data#
n2<-unique(bark2$Species)#
phylo2<-keep.tip(phylo,phylo$tip.label[match(n2, phylo$tip.label)])#
summary(phylo2)
phylo_cor <- ape::vcv.phylo(phylo2)#
summary(phylo_cor)#
#
#make an additional factor to reference the species in the phylogeny#
bark2$phylo2 <- bark2$Species#
#
summary(bark2)
par(mfrow=c(1,3))#
plot(density((bark2$D)))#
plot(density(sqrt(bark2$D)))#
plot(density(log(bark2$D)))#
#
bark2 $Dlog=log(bark2 $D)
model_Flog <-brm(Dlog~Function+(1|phylo2)+(1|Species), #
                 cov_ranef = list(phylo2 = phylo_cor),#
                 data = bark2, family = gaussian(link="identity"), sample_prior = TRUE,#
                 iter = 10000,warmup = 5000, chains = 4, cores = 4,#
                 thin = 10, save_all_pars = TRUE,seed=T,#
                 control=list(adapt_delta=0.99))
model_Flog
