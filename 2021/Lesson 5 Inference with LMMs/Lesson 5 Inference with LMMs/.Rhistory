rm(list=ls())
options(digits=3, width=60)
## load the relevant libraries
library(lme4)
library(ggplot2)
library(lattice)
library(arm)
library(utils)
library(car)
library(MuMIn)
library(pbkrtest)
?pvalues
biodepth <- read.csv("exampledata/Biodepth.csv")
summary(biodepth)
dim(biodepth)
biodepth$location<-as.factor(biodepth$location)
biodepth$block<-as.factor(biodepth$block)
mod1 <- lmer(sqrt(biomass)~log.diversity + (1|location), data=biodepth)
summary(mod1)
#LRT?
mod0 <- update(mod1, ~.-log.diversity)
summary(mod0)
#LRT
anova(mod0, mod1)
getME(mod1, 'devcomp')$dims
#first, we will be non-conservative
#if we assume fixed effects parameters only plus only one df for the random effects' variance (nth) then:
den.df <- 476 - 2 - 1 - 2   # n - p - 1 random variance - 2 REML
den.df  #471
## now get F-value for fixed effect
anova(mod1)   #F=47.5
## perform an f-test for floor effect
pf(47.5, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
den.df <- 476  -2 - 8 - 2  # n - p - q random levels - 2 REML
pf(47.5, 1, den.df, lower.tail=FALSE)
KRmodcomp(mod0, mod1)
#check the ddf number
464+(471-464)/2
## the 'car' library also allows one to test mixed models with KR df
Anova(mod1, test='F')
library(lmerTest)
chooseCRANmirror()
install.packages("lmerTest")
library(lmerTest)
summary(mod1)
mod1 <- lmer(sqrt(biomass)~log.diversity + (1|location), data=biodepth)
summary(mod1)
plants <- read.csv('exercises/plantdamage.csv')
summary(plants)
plants$shadehouse <- as.factor(plants$shadehouse)
plants$sld.no <- as.factor(plants$sld.no)
plants$species <- as.factor(plants$species)
plants$light <- as.factor(plants$light)
plants$block <- as.factor(plants$block)
hist(plants$growth)
hist(log(plants$growth)
hist(log(plants$growth)
)
hist(log(plants$growth))
hist(sqrt(plants$growth))
hist((plants$growth)^(1/3))
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
summary(lmm1)
rm(list=ls())
options(digits=3, width=60)
## load the relevant libraries
library(lme4)
library(ggplot2)
library(lattice)
library(arm)
library(utils)
library(car)
library(MuMIn)
library(pbkrtest)
plants <- read.csv('exercises/plantdamage.csv')
summary(plants)
plants$shadehouse <- as.factor(plants$shadehouse)
plants$sld.no <- as.factor(plants$sld.no)
plants$species <- as.factor(plants$species)
plants$light <- as.factor(plants$light)
plants$block <- as.factor(plants$block)
hist((plants$growth)^(1/3))
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
summary(lmm1)
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
summary(lmm1)
lmm2 <- lmer((growth)^(1/3)~light + (1|shadehouse),plants)
summary(lmm2)
#LRT
anova(lmm1,lmm2)
getME(lmm1)
getME(lmm1, 'devcomp')$dims
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
getME(lmm1, 'devcomp')$dims
den.df <- 81 - 3 - 1 - 3   # n - p - 1 random variance - 2 REML
den.df  #471
## now get F-value for fixed effect
anova(lmm1)   #F=47.5
## perform an f-test for log.diversity effect
pf(27.1, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
pf(33.8, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
#conservative df
den.df <- 81 - 3 - 10 - 3   # n - p - 1 random variance - 2 REML
den.df
## perform an f-test for log.diversity effect
pf(27.1, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
pf(33.8, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
KRmodcomp(lmm2, lmm1)
#non-conservative df
den.df <- 81 - 3 - 1 - 3   # n - p - 1 random variance - 2 REML
den.df  #474
#conservative df
den.df <- 81 - 3 - 10 - 3   # n - p - 1 random variance - 2 REML
den.df  #65
#check the ddf number
72+(72-65)/2
#check the ddf number
65+(72-65)/2
KRmodcomp(lmm2, lmm1)
#check the ddf number
65+(72-65)/2
#check the ddf number
65+(72-65)/2
## the 'car' library also allows one to test mixed models with KR df
Anova(mod1, test='F')
## the 'car' library also allows one to test mixed models with KR df
library(car)
Anova(mod1, test='F')
Anova(lmm1, test='F')
summary(lmm2)
lmm3 <- lmer((growth)^(1/3)~damage + (1|shadehouse),plants)
summary(lmm3)
install.packages("MLmatrix")
install.packages("MLmetrics")
library(MLmetrics)
?RMSPE
plants <- read.csv('exercises/plantdamage.csv')
plants <- read.csv('exercises/plantdamage.csv')
summary(plants)
plants$shadehouse <- as.factor(plants$shadehouse)
plants$sld.no <- as.factor(plants$sld.no)
plants$species <- as.factor(plants$species)
plants$light <- as.factor(plants$light)
plants$block <- as.factor(plants$block)
summary(plants)
hist((plants$growth)^(1/1))
hist((plants$growth)^(1/3))
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
summary(lmm1)
lmm2 <- lmer((growth)^(1/3)~light + (1|shadehouse),plants)
#LRT
anova(lmm1,lmm2)
lmm3 <- lmer((growth)^(1/3)~damage + (1|shadehouse),plants)
#LRT
anova(lmm1,lmm3)
getME(lmm1, 'devcomp')$dims
## now get F-value for fixed effect
anova(lmm1)   #light: F= 27.1; damage: F = 33.8
summary(plants)
plants$grow.cub <- (plants$growth)^(1/3)
summary(plants)
summary(plants)
hist((plants$growth+3)^(1/3))
plants$grow.cub <- (plants$growth+3)^(1/3)
summary(plants)
lmm1 <- lmer((growth)^(1/3)~light+damage + (1|shadehouse),plants)
summary(lmm1)
getME(lmm1, 'devcomp')$dims
lmm1 <- lmer(grow.cub~light+damage + (1|shadehouse),plants)
summary(lmm1)
getME(lmm1, 'devcomp')$dims
#non-conservative df
den.df1 <- 103 - 3 - 1 - 3   # for damage
den.df1
den.df2 <- 10 - 1 # light
den.df2
## now get F-value for fixed effect
anova(lmm1)   #light: F= 27.1; damage: F = 33.8
pf(49.4, df1=1, df2=den.df1, lower.tail=FALSE) ## damage highly significant
#conservative df
den.df1 <- 81 - 3 - 10 - 3   # for damage
pf(58.0, df1=1, df2=den.df2, lower.tail=FALSE) ## light highly significant
#conservative df
den.df1 <- 103 - 3 - 10 - 3   # for damage
den.df2 <- 10 - 1   # for light
## now get F-value for fixed effect
anova(lmm1)   #light: F= 27.1; damage: F = 33.8
## perform an f-test for log.diversity effect
pf(27.1, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
pf(33.8, df1=1, df2=den.df, lower.tail=FALSE) ## highly significant
## now get F-value for fixed effect
anova(lmm1)   #light: F= 58.0; damage: F = 49.4
pf(49.4, df1=1, df2=den.df1, lower.tail=FALSE) ## damage highly significant
KRmodcomp(lmm2, lmm1)
pf(58.0, df1=1, df2=den.df2, lower.tail=FALSE) ## light highly significant
KRmodcomp(lmm1)
lmm2 <- lmer(grow.cub~light + (1|shadehouse),plants)
KRmodcomp(lmm1,lmm2)
#conservative df
den.df1 <- 103 - 3 - 10 - 3   # for damage
den.df1
den.df1
#non-conservative df
den.df1 <- 103 - 3 - 1 - 3   # for damage 96
den.df1
#check the ddf number
87+(96-87)/2
Anova(lmm1, test='F')
getME(lmm1, 'devcomp')$dims
## now get F-value for fixed effect
anova(lmm1)   #light: F= 58.0; damage: F = 49.4
## perform an f-test for log.diversity effect
pf(49.4, df1=1, df2=den.df1, lower.tail=FALSE) ## damage highly significant
pf(58.0, df1=1, df2=den.df2, lower.tail=FALSE) ## light highly significant
mod1 <- lmer(sqrt(biomass)~log.diversity + (1|location), data=biodepth)
biodepth <- read.csv("exampledata/Biodepth.csv")
summary(biodepth)
dim(biodepth)
biodepth$location<-as.factor(biodepth$location)
biodepth$block<-as.factor(biodepth$block)
mod1 <- lmer(sqrt(biomass)~log.diversity + (1|location), data=biodepth)
summary(mod1)
summary(mod1)
## can use the confint function to conduct bootstraps
confint.result <- confint(mod1, method='boot', nsim = 999) ## has a number of options
confint.result
?confint
confint(... = )
## can use the confint function to conduct bootstraps
confint.result <- confint(mod1, method='boot', oldNames=F;nsim = 999) ## has a number of options
## can use the confint function to conduct bootstraps
confint.result <- confint(mod1, method='boot', oldNames=F, nsim = 999) ## has a number of options
confint.result
## can use the confint function to conduct bootstraps
confint.result <- confint(mod1, method='boot', oldNames=F, nsim = 2999) ## has a number of options
confint.result
lmm1s <- lmer(grow.cub~light+damage + (1+damage|shadehouse),plants)
summary(lmm1s)
confint.result <- confint(lmm1s, method='boot', oldNames=F, nsim = 2999) ## has a number of options
confint.result
confint.result <- confint(lmm1s, method='boot', oldNames=F, nsim = 5999) ## has a number of options
confint.result
